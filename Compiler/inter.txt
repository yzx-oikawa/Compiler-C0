0	1	2	3
const	int	stepmask	1
const	char	plus	+
const	char	times	*
const	char	minus	-
const	char	div	/
const	char	udl	_
var	int	list	10
var	char	op	
func	int	fact	
para	int	n	
==	n	0	
bz	Label1		
/	minus	1000	t1
-	t1	1	t2
*	div	t2	t3
+	t3	plus	t4
-	t4	times	t5
/	-1	times	t6
-	t5	t6	t7
assign	1	-	t8
+	t8	2	t9
*	47	t9	t10
+	t7	t10	t11
ret	t11		
goto	Label2		
Label1	:		
-	n	1	t12
push	t12		
call	fact		
assign	ret		t13
*	n	t13	t14
ret	t14		
Label2	:		
func	int	isletter	
para	char	c1	
==	c1	95	
bz	Label3		
ret	1		
goto	Label4		
Label3	:		
Label4	:		
>=	c1	97	
bz	Label5		
<=	c1	122	
bz	Label6		
ret	1		
goto	Label7		
Label6	:		
ret	0		
Label7	:		
goto	Label8		
Label5	:		
Label8	:		
>=	c1	65	
bz	Label9		
<=	c1	90	
bz	Label10		
ret	1		
goto	Label11		
Label10	:		
Label11	:		
goto	Label12		
Label9	:		
Label12	:		
ret	0		
func	int	choose_pivot	
para	int	i	
para	int	j	
+	i	j	t1
/	t1	2	t2
ret	t2		
func	void	printlist	
para	int	n	
var	int	i	
assign	0		i
Label13	:		
<	i	n	
bz	Label14		
print	 		
arrget	list	i	t1
print		t1	
+	i	1	t2
assign	t2		i
goto	Label13		
Label14	:		
ret	none		
func	void	quicksort	
para	int	m	
para	int	n	
var	int	key	
var	int	x	
var	int	y	
var	int	z	
var	int	tmp	
push	m		
push	n		
call	choose_pivot		
assign	ret		t1
arrget	list	t1	t2
assign	t2		key
assign	m		x
assign	n		y
Label15	:		
<=	x	y	
bz	Label16		
Label17	:		
arrget	list	y	t3
<	key	t3	
bz	Label18		
-	y	1	t4
assign	t4		y
goto	Label17		
Label18	:		
Label19	:		
arrget	list	x	t5
>	key	t5	
bz	Label20		
+	x	1	t6
assign	t6		x
goto	Label19		
Label20	:		
<=	x	y	
bz	Label21		
arrget	list	x	t7
assign	t7		tmp
arrget	list	y	t8
arrass	t8	x	list
arrass	tmp	y	list
+	x	1	t9
assign	t9		x
-	y	1	t10
assign	t10		y
goto	Label22		
Label21	:		
Label22	:		
goto	Label15		
Label16	:		
<	x	n	
bz	Label23		
push	x		
push	n		
call	quicksort		
goto	Label24		
Label23	:		
Label24	:		
<	m	y	
bz	Label25		
push	m		
push	y		
call	quicksort		
goto	Label26		
Label25	:		
Label26	:		
ret	none		
func	void	exprcheck	
var	int	a	
var	int	b	
var	int	res	
var	int	flag	
scan	a		
scan	op		
scan	b		
print		a	
print		op	
print		b	
print	=		
assign	1		flag
==	op	43	
bz	Label27		
+	a	b	t1
assign	t1		res
print		res	
assign	0		flag
goto	Labeleoc1		
Label27	:		
==	op	45	
bz	Label28		
-	a	b	t2
assign	t2		res
print		res	
assign	0		flag
goto	Labeleoc1		
Label28	:		
==	op	42	
bz	Label29		
*	a	b	t3
assign	t3		res
print		res	
assign	0		flag
goto	Labeleoc1		
Label29	:		
==	op	47	
bz	Label30		
assign	0		flag
==	b	0	
bz	Label31		
print	error:divided by zero. 		
goto	Label32		
Label31	:		
/	a	b	t4
assign	t4		res
print		res	
Label32	:		
goto	Labeleoc1		
Label30	:		
Labeleoc1	:		
>	flag	0	
bz	Label33		
print	undefined operation:		
print		op	
print	please select one from set {+,-,*,/}. 		
goto	Label34		
Label33	:		
Label34	:		
ret	none		
func	void	arraychek	
const	int	a	10
var	int	i	
assign	0		i
Label35	:		
<	i	10	
bz	Label36		
-	10	i	t1
arrass	t1	i	list
+	i	1	t2
assign	t2		i
goto	Label35		
Label36	:		
arrass	16	1	list
arrass	3	2	list
assign	8	-	t3
arrass	t3	3	list
arrass	40	4	list
assign	1	-	t4
arrass	t4	5	list
arrass	2	6	list
assign	10	-	t5
arrass	t5	7	list
assign	1		i
push	0		
push	1		
push	1		
call	choose_pivot		
assign	ret		t6
-	t6	i	t7
push	t7		
call	choose_pivot		
assign	ret		t8
push	t8		
push	9		
push	9		
call	choose_pivot		
assign	ret		t9
push	t9		
call	quicksort		
push	10		
call	printlist		
ret	none		
func	void	recurcheck	
var	int	i	
scan	i		
Label37	:		
<=	13	i	
bz	Label38		
print	please input a smaller one:		
scan	i		
goto	Label37		
Label38	:		
push	i		
call	fact		
assign	ret		t1
print		t1	
ret	none		
func	void	lettercheck	
var	char	x	
scan	x		
push	x		
call	isletter		
assign	ret		t1
>	t1	0	
bz	Label39		
print	true		
goto	Label40		
Label39	:		
print	false		
Label40	:		
ret	none		
func	void	main	
var	int	choice	
scan	choice		
Label41	:		
!=	choice	0	
bz	Label42		
/	0	5	t1
+	choice	t1	t2
*	t2	4	t3
/	t3	4	t4
+	t4	19	t5
-	t5	19	t6
==	t6	1	
bz	Label43		
call	exprcheck		
goto	Labeleoc2		
Label43	:		
==	t6	2	
bz	Label44		
call	arraychek		
goto	Labeleoc2		
Label44	:		
==	t6	3	
bz	Label45		
call	recurcheck		
goto	Labeleoc2		
Label45	:		
==	t6	4	
bz	Label46		
call	lettercheck		
goto	Labeleoc2		
Label46	:		
print	wrong number:		
print		choice	
Labeleoc2	:		
print	    		
scan	choice		
goto	Label41		
Label42	:		
